<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software on 182 BIT TECH DOCS</title>
    <link>https://182bit.org/tags/software/</link>
    <description>Recent content in Software on 182 BIT TECH DOCS</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 20 Oct 2024 23:01:29 +0200</lastBuildDate>
    <atom:link href="https://182bit.org/tags/software/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automating Script Managment</title>
      <link>https://182bit.org/posts/2024-10-20_automating-scripting/</link>
      <pubDate>Sun, 20 Oct 2024 23:01:29 +0200</pubDate>
      <guid>https://182bit.org/posts/2024-10-20_automating-scripting/</guid>
      <description>&lt;h3 id=&#34;automating-script-management-for-local-use&#34;&gt;Automating Script Management for Local Use&lt;/h3&gt;&#xA;&lt;p&gt;Recently, I’ve begun automating a few small processes, such as cloud synchronization and backup creation. These tasks help me streamline my workflows and reduce the manual effort involved in keeping my system up to date. To make the automation scripts conveniently available locally, I’ve written a small Bash script that allows me to easily link any new scripts I create to a directory in my system&amp;rsquo;s &lt;code&gt;$PATH&lt;/code&gt;, making them accessible from anywhere in the terminal.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Decap CMS on Hugo</title>
      <link>https://182bit.org/posts/2024-10-17_decap-on-hugo/</link>
      <pubDate>Fri, 18 Oct 2024 14:18:02 +0200</pubDate>
      <guid>https://182bit.org/posts/2024-10-17_decap-on-hugo/</guid>
      <description>&lt;h1 id=&#34;how-to-set-up-a-multilingual-decap-cms-with-gitlab&#34;&gt;&lt;strong&gt;How to Set Up a Multilingual Decap CMS with GitLab&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;p&gt;Managing multilingual content can be a complex task, but with Decap CMS and GitLab, you can streamline the process effectively. This guide will walk you through setting up a multilingual content management system using Decap CMS with GitLab, handling slug fields, adding featured images, and linking translations.&lt;/p&gt;&#xA;&lt;h2 id=&#34;table-of-contents&#34;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#setting-up-decap-cms-with-gitlab&#34;&gt;Setting Up Decap CMS with GitLab&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#configuring-multilingual-collections&#34;&gt;Configuring Multilingual Collections&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#switching-to-string-widget-for-slug-fields&#34;&gt;Switching to String Widget for Slug Fields&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#adding-featured-images-to-posts&#34;&gt;Adding Featured Images to Posts&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#linking-translations-with-relation-fields&#34;&gt;Linking Translations with Relation Fields&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#troubleshooting-common-issues&#34;&gt;Troubleshooting Common Issues&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A self-hosted GitLab instance.&lt;/li&gt;&#xA;&lt;li&gt;A static site generator (e.g., Hugo, Jekyll) configured with multilingual support.&lt;/li&gt;&#xA;&lt;li&gt;Basic knowledge of YAML and Git.&lt;/li&gt;&#xA;&lt;li&gt;Decap CMS installed in your project.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;setting-up-decap-cms-with-gitlab&#34;&gt;&lt;strong&gt;Setting Up Decap CMS with GitLab&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-configure-oauth-application-in-gitlab&#34;&gt;&lt;strong&gt;Step 1: Configure OAuth Application in GitLab&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Navigate to User Settings:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flashing OpenWrt on your hardware</title>
      <link>https://182bit.org/posts/2024-09-29-unifi-ap-ac-pro-openwrt/</link>
      <pubDate>Mon, 30 Sep 2024 20:16:51 +0200</pubDate>
      <guid>https://182bit.org/posts/2024-09-29-unifi-ap-ac-pro-openwrt/</guid>
      <description>&lt;h1 id=&#34;flashing-openwrt-on-a-ubiquiti-ap-ac-pro-a-journey-from-tftp-frustration-to-ssh-success&#34;&gt;Flashing OpenWrt on a Ubiquiti AP AC Pro: A Journey from TFTP Frustration to SSH Success&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://182bit.org/images/posts/uap-ac-pro-8.png&#34; alt=&#34;Ubiquiti AP AC Pro&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;Image credit: &lt;a href=&#34;https://techspecs.ui.com/unifi/wifi/uap-ac-pro#marketing-images&#34;&gt;https://techspecs.ui.com/unifi/wifi/uap-ac-pro#marketing-images&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;As a network enthusiast, I&amp;rsquo;ve always been keen on customizing my devices to unlock their full potential. Recently, I decided to flash OpenWrt onto my &lt;strong&gt;Ubiquiti AP AC Pro&lt;/strong&gt; to gain more control over its features. What seemed like a straightforward task turned into a learning experience that underscored the importance of digging deeper when faced with technical challenges.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
